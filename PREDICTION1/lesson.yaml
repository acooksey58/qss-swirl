- Class: meta
  Course: qss-swirl
  Lesson: PREDICTION1
  Author: Elisha Cohen, Kosuke Imai
  Type: Standard
  Organization: Princeton University
  Version: 2.2.21

- Class: text
  Output: 'The following exercises are a companion to Chapter 4: Prediction.'

# Question 1
- Class: mult_question
  Output: >
    True or False: Loops can simplify our programming code
    when we want to repeatedly execute code chunks over and over again.
  AnswerChoices: '"True"; "False"'
  CorrectAnswer: 'True'
  AnswerTests: omnitest(correctVal='"True"')
  Hint: See 'Loop in R'

# Question 2
- Class: mult_question
  Output: 'To iterate means to _____.'
  AnswerChoices: 'perform repeatedly; perform once; skip over'
  CorrectAnswer: perform repeatedly
  AnswerTests: omnitest(correctVal='perform repeatedly')
  Hint: See 'Loop in R'

# Question 3
- Class: cmd_question
  Output: >
    Given that "n <- 10",
    how many times will the loop "for (i in 1:n)" iterate through?
  CorrectAnswer: '10'
  AnswerTests: omnitest(correctExpr='10')
  Hint: See 'Loop in R'

# Question 4
- Class: mult_question
  Output: >
    In the conditional expression "if (Y) {expression1}",
    "expression1" will be executed if "Y" is _____.'
  AnswerChoices: 'True; False'
  CorrectAnswer: 'True'
  AnswerTests: omnitest(correctVal='True')
  Hint: See 'General Conditional Statements in R'

# Question 5
- Class: mult_question
  Output: >
    A conditional statement that is nested within a loop is executed _____
    the loop.
  AnswerChoices: 'inside; outside'
  CorrectAnswer: inside
  AnswerTests: omnitest(correctVal='inside')
  Hint: See 'General Conditional Statements in R'

## Programming Questions
- Class: text
  Output: >
    It is often useful to create an empty vector to store
    the computational output from a loop.

# Question 6
- Class: cmd_question
  Output: >
    Create a vector called "output" that is filled with "NA"s
    and has the length "n". The object "n" has been included in this lesson.
  CorrectAnswer: output <- rep(NA, n)
  AnswerTests: omnitest(correctExpr='output <- rep(NA,n)')
  Hint: See 'Loop in R'

# Question 7
- Class: cmd_question
  Output: >
    Use the "cat()" function to put together a phrase and the object "n".
    The final output should read 'The object n has value 10'.
  CorrectAnswer: cat("The object n has value", n)
  AnswerTests: omnitest(correctExpr='cat("The object n has value", n)')
  Hint: See 'Loop in R.' You shouldn't need to type any numbers.

# Question 8
- Class: cmd_question
  Output: >
    A vector called "fruit" has been loaded for you.
    Call the vector to see what it looks like.
  CorrectAnswer: fruit
  AnswerTests: omnitest(correctExpr='fruit')

# Question 9
- Class: cmd_question
  Output: >
    Use a function to determine the different types of fruit
    (we want to see each fruit listed once).
  CorrectAnswer: unique(fruit)
  AnswerTests: omnitest(correctExpr='unique(fruit)')
  Hint: See 'Poll Predictions'

# Question 10
- Class: cmd_question
  Output: >
    Here is a variant of the classic 'FizzBuzz' coding question.
    Write a for loop that executes the code
    'cat('The following number i is divisible by 3', i, '\n')'
    for numbers from 1 to 50 (inclusive) only for the numbers divisible by 3.
    Include brackets for the conditional.
  CorrectAnswer: >-
    for (i in 1:50) {
      if (i %% 3 == 0) {
        cat("The following number i is divisible by 3", i, "\n")
      }
    }
  AnswerTests: >-
    omnitest(
      correctExpr =
        'for (i in 1:50) {
           if (i %% 3 == 0) {
             cat("The following number i is divisible by 3", i, "\n")
           }
         }'
    )
  Hint: >
    See 'Loop in R' and 'General Conditional Statements in R'.
    The modulo operator is "%%".

# Question 11
- Class: cmd_question
  Output: >
    Continuing from the previous FizzBuzz code you wrote,
    if the number is divisible by 5 (but not by 3), execute the code
    'cat('The following number i is divisible by 5', i, '\n')'.
  CorrectAnswer: >-
    for (i in 1:50) {
      if (i %% 3 == 0) {
        cat("The following number i is divisible by 3", i, "\n")
      } else if (i %% 5 == 0) {
        cat("The following number i is divisible by 5", i, "\n")
      }
    }
  AnswerTests: >-
    any_of_exprs(
      'for (i in 1:50) {
         if (i %% 3 == 0) {
           cat("The following number i is divisible by 3", i, "\n")
         } else if (i %% 5 == 0) {
           cat("The following number i is divisible by 5", i, "\n")
         }
       }',
      'for (i in seq(50)) {
         if (i %% 3 == 0) {
           cat("The following number i is divisible by 3", i, "\n")
         } else if (i %% 5 == 0) {
           cat("The following number i is divisible by 5", i, "\n")
         }
       }'
    )
  Hint: The answer involves adding a single else if condition.

- Class: text
  Output: >
    You've successfully completed part 1 of the Prediction course!
