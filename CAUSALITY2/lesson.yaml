############
# Preamble #
############
- Class: meta
  Course: qss-swirl
  Lesson: CAUSALITY2
  Author: Winston Chou, Kosuke Imai
  Type: Standard
  Organization: Princeton University
  Version: 2.3.0

################
# Introduction #
################
- Class: text
  Output: >
    These exercises are a companion to Chapter 2 of
    'Quantitative Social Science: Introduction'.

## Conceptual Questions
# Question 1
- Class: mult_question
  Output: >
    Chapter 2 discusses several approaches to identifying causal relationships.
    Which of the following approaches is considered the 'gold standard'
    in many scientific disciplines?
  AnswerChoices: >
    Randomized controlled trials; Randomized experiments; Either of these
  CorrectAnswer: Either of these
  AnswerTests: omnitest(correctVal="Either of these")
  Hint: >
    Don't be confused by the different terminology!
    See Randomized Controlled Trials'.

- Class: text
  Output: >
    For ethical and logistical reasons, social scientists are often unable
    to conduct randomized controlled trials (RCTs). Therefore, they must conduct
    observational studies in which data on naturally occurring events are
    collected and analyzed.

# Question 2
- Class: mult_question
  Output: >
    With observational studies, it is often hard to establish that changes in
    one variable caused changes in another variable. In other words,
    observational studies have less __________ compared to RCTS.
  AnswerChoices: >
    Internal validity; External validity; Generalizability; All of these
  CorrectAnswer: Internal validity
  AnswerTests: omnitest(correctVal="Internal validity")
  Hint: 'See ''The Role of Randomization''.'

- Class: text
  Output: >
    Take a look at the following nested "ifelse()" statement:
    "social$type <- ifelse(social$yearofbirth <= 1943 & social$primary2004 == 1,
    ''Senior Voter'',
    ifelse(social$yearofbirth <= 1943 & social$primary2004 == 0,
    ''Senior Non-voter'',
    ifelse(social$yearofbirth > 1943 & social$primary2004 == 1,
    ''Non-senior Voter'', ''Non-senior Non-voter'')))"

# Question 3
- Class: mult_question
  Output: 'What kinds of people does "social$type" distinguish between?'
  AnswerChoices: >
    seniors and non-seniors; voters and non-voters;
    non-senior voters and non-senior non-voters; all of these
  CorrectAnswer: all of these
  AnswerTests: omnitest(correctVal="all of these")
  Hint: 'See "Simple Conditional Statements".'

# Question 4
- Class: mult_question
  Output: 'The counterfactual is __________.'
  AnswerChoices: >
    what actually happened;
    what would have happened if a key condition were different;
    what we want to happen
  CorrectAnswer: what would have happened if a key condition were different
  AnswerTests: >-
    omnitest(
      correctVal = "what would have happened if a key condition were different"
    )
  Hint: See 'Causal Effects and the Counterfactual'.

# Question 5
- Class: mult_question
  Output: 'When do we observe both potential outcomes, i.e., Y(1) and Y(0)?'
  AnswerChoices: 'Always; Never; Sometimes'
  CorrectAnswer: Never
  AnswerTests: omnitest(correctVal="Never")
  Hint: See 'Causal Effects and the Counterfactual'.

## Programming Questions
- Class: text
  Output: >
    The external data file "resume.csv" has been loaded for you as the data
    frame object "resume". Be sure that you have read the section
    'Racial Discrimination in the Labor Market' and understand
    what this data file contains.

# Question 6
- Class: cmd_question
  Output: >
    Use indexing to find the callback rate for fictitious female job applicants
    in "resume".
  CorrectAnswer: mean(resume$call[resume$sex == "female"])
  AnswerTests: >-
    any_of_exprs(
      'mean(resume$call[resume$sex == "female"])',
      'mean(resume[resume$sex == "female", "call"])',
      'mean(resume[resume[, "sex"] == "female", "call"])'
    )
  Hint: 'See ''Subsetting the Data in R''.'

- Class: text
  Output: >
    We can also find the callback rate for fictitious female job applicants
    using the "subset()" function.

# Question 7
- Class: cmd_question
  Output: >
    To find the result of Question 6 through a different method,
    use "subset()" to create a new data.frame object called "resumeF" that
    only consists of female applicants.
  CorrectAnswer: resumeF <- subset(resume, sex == "female")
  AnswerTests: >-
    any_of_exprs(
      'resumeF <- subset(resume, sex == "female")',
      'resumeF <- subset(resume, subset = (sex == "female"))'
    )
  Hint: 'See ''Subsetting the Data in R''.'

# Question 8
- Class: cmd_question
  Output: 'Now calculate the callback rate in "resumeF".'
  CorrectAnswer: mean(resumeF$call)
  AnswerTests: any_of_exprs('mean(resumeF$call)', 'mean(resumeF[, "call"])')
  Hint: 'See ''Subsetting the Data in R''.'

- Class: text
  Output: >
    The external data file "social.csv" has been loaded for you as the
    data.frame object "social". Be sure that you have read the section
    'Social Pressure and Voter Turnout' and understand what this data file
    contains.

- Class: text
  Output: >
    Recall that the "tapply()" function takes three arguments,
    in order, "X", "INDEX", and "FUN". You can think of "tapply()"
    as taking an object (typically a vector) called "X"; splitting "X"
    into categories defined by "INDEX"; and, lastly, applying the "FUN"-ction
    to each subset of "X".

# Question 9
- Class: cmd_question
  Output: >
    Try using "tapply()" to find the turnout rate in 2006 for each experimental
    group identified by the variable "messages".
  CorrectAnswer: tapply(social$primary2006, social$messages, mean)
  AnswerTests: >-
    any_of_exprs(
      'tapply(social$primary2006, social$messages, mean)',
      'tapply(social[, "primary2006"], social[, "messages"], mean)',
      'tapply(social$primary2006, social[, "messages"], mean)',
      'tapply(social[, "primary2006"], social$messages, mean)'
    )
  Hint: 'See ''Social Pressure and Voter Turnout''.'

- Class: text
  Output: >
    Recall that the "ifelse()" function takes three arguments.
    The first argument is a logical statement that can either be "TRUE" or
    "FALSE". If it is "TRUE", "ifelse()" returns the second argument.
    If it is "FALSE", "ifelse()" returns the third argument.

- Class: text
  Output: >
    We will now use the "ifelse()" function to recode sex as a numeric variable.

# Question 10
- Class: cmd_question
  Output: >
    Use "ifelse()" to create a new variable, "social$female", that equals 1
    if the applicant is female and 0 otherwise.
  CorrectAnswer: social$female <- ifelse(social$sex == "female", 1, 0)
  AnswerTests: >-
    any_of_exprs(
      'social$female <- ifelse(social$sex == "female", 1, 0)',
      'social$female <- ifelse(social$sex == "male", 0, 1)',
      'social$female <- ifelse(social[, "sex"] == "female", 1, 0)',
      'social$female <- ifelse(social[, "sex"] == "male", 0, 1)'
    )
  Hint: 'See ''Simple Conditional Statements''.'

- Class: text
  Output: >
    You've successfully completed part 2 of the Causality course!
